Server request________________________
Content-Length: 102

{"command":"evaluate","arguments":{"expression":"process.pid","global":true},"type":"request","seq":1}
______________________________________
Connection opened
______________________________________
Server response_______________________
Type: connect
V8-Version: 3.28.71.19
Protocol-Version: 1
Embedding-Host: node v0.12.9
Content-Length: 0


______________________________________
Server response_______________________
Content-Length: 169

{"seq":0,"request_seq":1,"type":"response","command":"evaluate","success":true,"body":{"handle":0,"type":"number","value":77304,"text":"77304"},"refs":[],"running":true}
______________________________________
Server request________________________
Content-Length: 4902

{"command":"evaluate","arguments":{"expression":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n!function () {\r\n    var vm = require('vm');\r\n    var LookupMirror = vm.runInDebugContext('LookupMirror');\r\n    var PropertyKind = vm.runInDebugContext('PropertyKind');\r\n    var DebugCommandProcessor = vm.runInDebugContext('DebugCommandProcessor');\r\n    var JSONProtocolSerializer = vm.runInDebugContext('JSONProtocolSerializer');\r\n    JSONProtocolSerializer.prototype.serializeReferencedObjects = function () {\r\n        var content = [];\r\n        for (var i = 0; i < this.mirrors_.length; i++) {\r\n            var m = this.mirrors_[i];\r\n            if (m.isArray())\r\n                continue;\r\n            if (m.isObject() && m.propertyNames(PropertyKind.Indexed | PropertyKind.Named, 100).length >= 100)\r\n                continue;\r\n            content.push(this.serialize_(m, false, false));\r\n        }\r\n        return content;\r\n    };\r\n    DebugCommandProcessor.prototype.dispatch_['vscode_range'] = function (request, response) {\r\n        var handle = request.arguments.handle;\r\n        var from_index = request.arguments.from;\r\n        var to_index = request.arguments.to;\r\n        var mirror = LookupMirror(handle);\r\n        if (!mirror) {\r\n            return response.failed('Object #' + handle + '# not found');\r\n        }\r\n        var result;\r\n        if (mirror.isArray()) {\r\n            result = new Array(to_index - from_index + 1);\r\n            var a = mirror.indexedPropertiesFromRange(from_index, to_index);\r\n            for (var i = 0; i < a.length; i++) {\r\n                result[i] = a[i].value();\r\n            }\r\n        }\r\n        else if (mirror.isObject()) {\r\n            result = new Array(to_index - from_index + 1);\r\n            for (var j = from_index; j <= to_index; j++) {\r\n                var p = mirror.property(j.toString());\r\n                result[j - from_index] = p.value();\r\n            }\r\n        }\r\n        else {\r\n            result = new Array(to_index - from_index + 1);\r\n        }\r\n        response.body = {\r\n            result: result\r\n        };\r\n    };\r\n    DebugCommandProcessor.prototype.vscode_dehydrate = function (mirror) {\r\n        var className = null;\r\n        var size = -1;\r\n        if (mirror.isArray()) {\r\n            className = \"Array\";\r\n            size = mirror.length();\r\n        }\r\n        else if (mirror.isObject()) {\r\n            switch (mirror.toText()) {\r\n                case \"#<Buffer>\":\r\n                    className = \"Buffer\";\r\n                    size = mirror.propertyNames(PropertyKind.Indexed).length;\r\n                    break;\r\n                case \"#<Int8Array>\":\r\n                case \"#<Uint8Array>\":\r\n                case \"#<Uint8ClampedArray>\":\r\n                case \"#<Int16Array>\":\r\n                case \"#<Uint16Array>\":\r\n                case \"#<Int32Array>\":\r\n                case \"#<Uint32Array>\":\r\n                case \"#<Float32Array>\":\r\n                case \"#<Float64Array>\":\r\n                    className = mirror.className();\r\n                    size = mirror.propertyNames(PropertyKind.Indexed).length;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        if (size > 1000) {\r\n            return {\r\n                handle: mirror.handle(),\r\n                type: \"object\",\r\n                className: className,\r\n                size: size,\r\n                value: className\r\n            };\r\n        }\r\n        return mirror;\r\n    };\r\n    DebugCommandProcessor.prototype.dispatch_['vscode_lookup'] = function (request, response) {\r\n        var result = this.lookupRequest_(request, response);\r\n        if (!result) {\r\n            var handles = request.arguments.handles;\r\n            for (var i = 0; i < handles.length; i++) {\r\n                var handle = handles[i];\r\n                response.body[handle] = this.vscode_dehydrate(response.body[handle]);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    DebugCommandProcessor.prototype.dispatch_['vscode_evaluate'] = function (request, response) {\r\n        var result = this.evaluateRequest_(request, response);\r\n        if (!result) {\r\n            response.body = this.vscode_dehydrate(response.body);\r\n        }\r\n        return result;\r\n    };\r\n}();\r\n//# sourceMappingURL=debugExtension.js.map"},"type":"request","seq":2}
______________________________________
Server response_______________________
Content-Length: 117

{"seq":1,"request_seq":2,"type":"response","command":"evaluate","success":false,"message":"No frames","running":true}
______________________________________
Server request________________________
Content-Length: 4902

{"command":"evaluate","arguments":{"expression":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n!function () {\r\n    var vm = require('vm');\r\n    var LookupMirror = vm.runInDebugContext('LookupMirror');\r\n    var PropertyKind = vm.runInDebugContext('PropertyKind');\r\n    var DebugCommandProcessor = vm.runInDebugContext('DebugCommandProcessor');\r\n    var JSONProtocolSerializer = vm.runInDebugContext('JSONProtocolSerializer');\r\n    JSONProtocolSerializer.prototype.serializeReferencedObjects = function () {\r\n        var content = [];\r\n        for (var i = 0; i < this.mirrors_.length; i++) {\r\n            var m = this.mirrors_[i];\r\n            if (m.isArray())\r\n                continue;\r\n            if (m.isObject() && m.propertyNames(PropertyKind.Indexed | PropertyKind.Named, 100).length >= 100)\r\n                continue;\r\n            content.push(this.serialize_(m, false, false));\r\n        }\r\n        return content;\r\n    };\r\n    DebugCommandProcessor.prototype.dispatch_['vscode_range'] = function (request, response) {\r\n        var handle = request.arguments.handle;\r\n        var from_index = request.arguments.from;\r\n        var to_index = request.arguments.to;\r\n        var mirror = LookupMirror(handle);\r\n        if (!mirror) {\r\n            return response.failed('Object #' + handle + '# not found');\r\n        }\r\n        var result;\r\n        if (mirror.isArray()) {\r\n            result = new Array(to_index - from_index + 1);\r\n            var a = mirror.indexedPropertiesFromRange(from_index, to_index);\r\n            for (var i = 0; i < a.length; i++) {\r\n                result[i] = a[i].value();\r\n            }\r\n        }\r\n        else if (mirror.isObject()) {\r\n            result = new Array(to_index - from_index + 1);\r\n            for (var j = from_index; j <= to_index; j++) {\r\n                var p = mirror.property(j.toString());\r\n                result[j - from_index] = p.value();\r\n            }\r\n        }\r\n        else {\r\n            result = new Array(to_index - from_index + 1);\r\n        }\r\n        response.body = {\r\n            result: result\r\n        };\r\n    };\r\n    DebugCommandProcessor.prototype.vscode_dehydrate = function (mirror) {\r\n        var className = null;\r\n        var size = -1;\r\n        if (mirror.isArray()) {\r\n            className = \"Array\";\r\n            size = mirror.length();\r\n        }\r\n        else if (mirror.isObject()) {\r\n            switch (mirror.toText()) {\r\n                case \"#<Buffer>\":\r\n                    className = \"Buffer\";\r\n                    size = mirror.propertyNames(PropertyKind.Indexed).length;\r\n                    break;\r\n                case \"#<Int8Array>\":\r\n                case \"#<Uint8Array>\":\r\n                case \"#<Uint8ClampedArray>\":\r\n                case \"#<Int16Array>\":\r\n                case \"#<Uint16Array>\":\r\n                case \"#<Int32Array>\":\r\n                case \"#<Uint32Array>\":\r\n                case \"#<Float32Array>\":\r\n                case \"#<Float64Array>\":\r\n                    className = mirror.className();\r\n                    size = mirror.propertyNames(PropertyKind.Indexed).length;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        if (size > 1000) {\r\n            return {\r\n                handle: mirror.handle(),\r\n                type: \"object\",\r\n                className: className,\r\n                size: size,\r\n                value: className\r\n            };\r\n        }\r\n        return mirror;\r\n    };\r\n    DebugCommandProcessor.prototype.dispatch_['vscode_lookup'] = function (request, response) {\r\n        var result = this.lookupRequest_(request, response);\r\n        if (!result) {\r\n            var handles = request.arguments.handles;\r\n            for (var i = 0; i < handles.length; i++) {\r\n                var handle = handles[i];\r\n                response.body[handle] = this.vscode_dehydrate(response.body[handle]);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    DebugCommandProcessor.prototype.dispatch_['vscode_evaluate'] = function (request, response) {\r\n        var result = this.evaluateRequest_(request, response);\r\n        if (!result) {\r\n            response.body = this.vscode_dehydrate(response.body);\r\n        }\r\n        return result;\r\n    };\r\n}();\r\n//# sourceMappingURL=debugExtension.js.map"},"type":"request","seq":3}
______________________________________
Server response_______________________
Content-Length: 117

{"seq":2,"request_seq":3,"type":"response","command":"evaluate","success":false,"message":"No frames","running":true}
______________________________________
Server request________________________
Content-Length: 4902

{"command":"evaluate","arguments":{"expression":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n!function () {\r\n    var vm = require('vm');\r\n    var LookupMirror = vm.runInDebugContext('LookupMirror');\r\n    var PropertyKind = vm.runInDebugContext('PropertyKind');\r\n    var DebugCommandProcessor = vm.runInDebugContext('DebugCommandProcessor');\r\n    var JSONProtocolSerializer = vm.runInDebugContext('JSONProtocolSerializer');\r\n    JSONProtocolSerializer.prototype.serializeReferencedObjects = function () {\r\n        var content = [];\r\n        for (var i = 0; i < this.mirrors_.length; i++) {\r\n            var m = this.mirrors_[i];\r\n            if (m.isArray())\r\n                continue;\r\n            if (m.isObject() && m.propertyNames(PropertyKind.Indexed | PropertyKind.Named, 100).length >= 100)\r\n                continue;\r\n            content.push(this.serialize_(m, false, false));\r\n        }\r\n        return content;\r\n    };\r\n    DebugCommandProcessor.prototype.dispatch_['vscode_range'] = function (request, response) {\r\n        var handle = request.arguments.handle;\r\n        var from_index = request.arguments.from;\r\n        var to_index = request.arguments.to;\r\n        var mirror = LookupMirror(handle);\r\n        if (!mirror) {\r\n            return response.failed('Object #' + handle + '# not found');\r\n        }\r\n        var result;\r\n        if (mirror.isArray()) {\r\n            result = new Array(to_index - from_index + 1);\r\n            var a = mirror.indexedPropertiesFromRange(from_index, to_index);\r\n            for (var i = 0; i < a.length; i++) {\r\n                result[i] = a[i].value();\r\n            }\r\n        }\r\n        else if (mirror.isObject()) {\r\n            result = new Array(to_index - from_index + 1);\r\n            for (var j = from_index; j <= to_index; j++) {\r\n                var p = mirror.property(j.toString());\r\n                result[j - from_index] = p.value();\r\n            }\r\n        }\r\n        else {\r\n            result = new Array(to_index - from_index + 1);\r\n        }\r\n        response.body = {\r\n            result: result\r\n        };\r\n    };\r\n    DebugCommandProcessor.prototype.vscode_dehydrate = function (mirror) {\r\n        var className = null;\r\n        var size = -1;\r\n        if (mirror.isArray()) {\r\n            className = \"Array\";\r\n            size = mirror.length();\r\n        }\r\n        else if (mirror.isObject()) {\r\n            switch (mirror.toText()) {\r\n                case \"#<Buffer>\":\r\n                    className = \"Buffer\";\r\n                    size = mirror.propertyNames(PropertyKind.Indexed).length;\r\n                    break;\r\n                case \"#<Int8Array>\":\r\n                case \"#<Uint8Array>\":\r\n                case \"#<Uint8ClampedArray>\":\r\n                case \"#<Int16Array>\":\r\n                case \"#<Uint16Array>\":\r\n                case \"#<Int32Array>\":\r\n                case \"#<Uint32Array>\":\r\n                case \"#<Float32Array>\":\r\n                case \"#<Float64Array>\":\r\n                    className = mirror.className();\r\n                    size = mirror.propertyNames(PropertyKind.Indexed).length;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        if (size > 1000) {\r\n            return {\r\n                handle: mirror.handle(),\r\n                type: \"object\",\r\n                className: className,\r\n                size: size,\r\n                value: className\r\n            };\r\n        }\r\n        return mirror;\r\n    };\r\n    DebugCommandProcessor.prototype.dispatch_['vscode_lookup'] = function (request, response) {\r\n        var result = this.lookupRequest_(request, response);\r\n        if (!result) {\r\n            var handles = request.arguments.handles;\r\n            for (var i = 0; i < handles.length; i++) {\r\n                var handle = handles[i];\r\n                response.body[handle] = this.vscode_dehydrate(response.body[handle]);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    DebugCommandProcessor.prototype.dispatch_['vscode_evaluate'] = function (request, response) {\r\n        var result = this.evaluateRequest_(request, response);\r\n        if (!result) {\r\n            response.body = this.vscode_dehydrate(response.body);\r\n        }\r\n        return result;\r\n    };\r\n}();\r\n//# sourceMappingURL=debugExtension.js.map"},"type":"request","seq":4}
______________________________________
Server response_______________________
Content-Length: 117

{"seq":3,"request_seq":4,"type":"response","command":"evaluate","success":false,"message":"No frames","running":true}
______________________________________
Server request________________________
Content-Length: 4902

{"command":"evaluate","arguments":{"expression":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n!function () {\r\n    var vm = require('vm');\r\n    var LookupMirror = vm.runInDebugContext('LookupMirror');\r\n    var PropertyKind = vm.runInDebugContext('PropertyKind');\r\n    var DebugCommandProcessor = vm.runInDebugContext('DebugCommandProcessor');\r\n    var JSONProtocolSerializer = vm.runInDebugContext('JSONProtocolSerializer');\r\n    JSONProtocolSerializer.prototype.serializeReferencedObjects = function () {\r\n        var content = [];\r\n        for (var i = 0; i < this.mirrors_.length; i++) {\r\n            var m = this.mirrors_[i];\r\n            if (m.isArray())\r\n                continue;\r\n            if (m.isObject() && m.propertyNames(PropertyKind.Indexed | PropertyKind.Named, 100).length >= 100)\r\n                continue;\r\n            content.push(this.serialize_(m, false, false));\r\n        }\r\n        return content;\r\n    };\r\n    DebugCommandProcessor.prototype.dispatch_['vscode_range'] = function (request, response) {\r\n        var handle = request.arguments.handle;\r\n        var from_index = request.arguments.from;\r\n        var to_index = request.arguments.to;\r\n        var mirror = LookupMirror(handle);\r\n        if (!mirror) {\r\n            return response.failed('Object #' + handle + '# not found');\r\n        }\r\n        var result;\r\n        if (mirror.isArray()) {\r\n            result = new Array(to_index - from_index + 1);\r\n            var a = mirror.indexedPropertiesFromRange(from_index, to_index);\r\n            for (var i = 0; i < a.length; i++) {\r\n                result[i] = a[i].value();\r\n            }\r\n        }\r\n        else if (mirror.isObject()) {\r\n            result = new Array(to_index - from_index + 1);\r\n            for (var j = from_index; j <= to_index; j++) {\r\n                var p = mirror.property(j.toString());\r\n                result[j - from_index] = p.value();\r\n            }\r\n        }\r\n        else {\r\n            result = new Array(to_index - from_index + 1);\r\n        }\r\n        response.body = {\r\n            result: result\r\n        };\r\n    };\r\n    DebugCommandProcessor.prototype.vscode_dehydrate = function (mirror) {\r\n        var className = null;\r\n        var size = -1;\r\n        if (mirror.isArray()) {\r\n            className = \"Array\";\r\n            size = mirror.length();\r\n        }\r\n        else if (mirror.isObject()) {\r\n            switch (mirror.toText()) {\r\n                case \"#<Buffer>\":\r\n                    className = \"Buffer\";\r\n                    size = mirror.propertyNames(PropertyKind.Indexed).length;\r\n                    break;\r\n                case \"#<Int8Array>\":\r\n                case \"#<Uint8Array>\":\r\n                case \"#<Uint8ClampedArray>\":\r\n                case \"#<Int16Array>\":\r\n                case \"#<Uint16Array>\":\r\n                case \"#<Int32Array>\":\r\n                case \"#<Uint32Array>\":\r\n                case \"#<Float32Array>\":\r\n                case \"#<Float64Array>\":\r\n                    className = mirror.className();\r\n                    size = mirror.propertyNames(PropertyKind.Indexed).length;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        if (size > 1000) {\r\n            return {\r\n                handle: mirror.handle(),\r\n                type: \"object\",\r\n                className: className,\r\n                size: size,\r\n                value: className\r\n            };\r\n        }\r\n        return mirror;\r\n    };\r\n    DebugCommandProcessor.prototype.dispatch_['vscode_lookup'] = function (request, response) {\r\n        var result = this.lookupRequest_(request, response);\r\n        if (!result) {\r\n            var handles = request.arguments.handles;\r\n            for (var i = 0; i < handles.length; i++) {\r\n                var handle = handles[i];\r\n                response.body[handle] = this.vscode_dehydrate(response.body[handle]);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    DebugCommandProcessor.prototype.dispatch_['vscode_evaluate'] = function (request, response) {\r\n        var result = this.evaluateRequest_(request, response);\r\n        if (!result) {\r\n            response.body = this.vscode_dehydrate(response.body);\r\n        }\r\n        return result;\r\n    };\r\n}();\r\n//# sourceMappingURL=debugExtension.js.map"},"type":"request","seq":5}
______________________________________
Server response_______________________
Content-Length: 117

{"seq":4,"request_seq":5,"type":"response","command":"evaluate","success":false,"message":"No frames","running":true}
______________________________________
Server request________________________
Content-Length: 44

{"command":"frame","type":"request","seq":6}
______________________________________
Server response_______________________
Content-Length: 114

{"seq":5,"request_seq":6,"type":"response","command":"frame","success":false,"message":"No frames","running":true}
______________________________________
Server request________________________
Content-Length: 99

{"command":"setexceptionbreak","arguments":{"type":"all","enabled":false},"type":"request","seq":7}
______________________________________
Server response_______________________
Content-Length: 151

{"seq":6,"request_seq":7,"type":"response","command":"setexceptionbreak","success":true,"body":{"type":"all","enabled":false},"refs":[],"running":true}
______________________________________
Server request________________________
Content-Length: 104

{"command":"setexceptionbreak","arguments":{"type":"uncaught","enabled":false},"type":"request","seq":8}
______________________________________
Server response_______________________
Content-Length: 156

{"seq":7,"request_seq":8,"type":"response","command":"setexceptionbreak","success":true,"body":{"type":"uncaught","enabled":false},"refs":[],"running":true}
______________________________________
Server request________________________
Content-Length: 103

{"command":"setexceptionbreak","arguments":{"type":"uncaught","enabled":true},"type":"request","seq":9}
______________________________________
Server response_______________________
Content-Length: 155

{"seq":8,"request_seq":9,"type":"response","command":"setexceptionbreak","success":true,"body":{"type":"uncaught","enabled":true},"refs":[],"running":true}
______________________________________
Server request________________________
Content-Length: 48

{"command":"continue","type":"request","seq":10}
______________________________________
Server response_______________________
Content-Length: 95

{"seq":9,"request_seq":10,"type":"response","command":"continue","success":true,"running":true}
______________________________________
Server request________________________
Content-Length: 55

{"command":"listbreakpoints","type":"request","seq":11}
______________________________________
Server response_______________________
Content-Length: 198

{"seq":10,"request_seq":11,"type":"response","command":"listbreakpoints","success":true,"body":{"breakpoints":[],"breakOnExceptions":false,"breakOnUncaughtExceptions":true},"refs":[],"running":true}
______________________________________
Server request________________________
Content-Length: 202

{"command":"setbreakpoint","arguments":{"line":1,"column":0,"type":"scriptRegExp","target":"^(.*[\\/\\\\])?\\/Users\\/ivolodin\\/Documents\\/Code\\/debugger\\/validate\\.js$"},"type":"request","seq":12}
______________________________________
Server response_______________________
Content-Length: 335

{"seq":11,"request_seq":12,"type":"response","command":"setbreakpoint","success":true,"body":{"type":"scriptRegExp","breakpoint":1,"script_regexp":"^(.*[\\/\\\\])?\\/Users\\/ivolodin\\/Documents\\/Code\\/debugger\\/validate\\.js$","line":1,"column":0,"actual_locations":[{"line":1,"column":4,"script_id":42}]},"refs":[],"running":true}
______________________________________
Server response_______________________
Content-Length: 326

{"seq":12,"type":"event","event":"break","body":{"invocationText":"#<Object>._onTimeout(aka a)()","sourceLine":1,"sourceColumn":4,"sourceLineText":"    console.log('Hello world');","script":{"id":42,"name":"/Users/ivolodin/Documents/Code/debugger/validate.js","lineOffset":0,"columnOffset":0,"lineCount":8},"breakpoints":[1]}}
______________________________________
Server request________________________
Content-Length: 47

{"command":"threads","type":"request","seq":13}
______________________________________
Server response_______________________
Content-Length: 168

{"seq":13,"request_seq":13,"type":"response","command":"threads","success":true,"body":{"totalThreads":1,"threads":[{"current":true,"id":1}]},"refs":[],"running":false}
______________________________________
Server request________________________
Content-Length: 90

{"command":"backtrace","arguments":{"fromFrame":0,"toFrame":20},"type":"request","seq":14}
______________________________________
Server response_______________________
Content-Length: 8522

{"seq":14,"request_seq":14,"type":"response","command":"backtrace","success":true,"body":{"fromFrame":0,"toFrame":2,"totalFrames":2,"frames":[{"type":"frame","index":0,"receiver":{"ref":1},"func":{"ref":0},"script":{"ref":6},"constructCall":false,"atReturn":false,"debuggerFrame":false,"arguments":[],"locals":[],"position":81,"line":1,"column":4,"sourceLineText":"    console.log('Hello world');","scopes":[{"type":1,"index":0},{"type":3,"index":1},{"type":0,"index":2}],"text":"#00 #<Object>._onTimeout(aka a)() /Users/ivolodin/Documents/Code/debugger/validate.js line 2 column 5 (position 82)"},{"type":"frame","index":1,"receiver":{"ref":7},"func":{"ref":8},"script":{"ref":10},"constructCall":false,"atReturn":false,"debuggerFrame":false,"arguments":[],"locals":[{"name":"msecs","value":{"ref":11}},{"name":"now","value":{"ref":12}},{"name":"diff","value":{"ref":13}},{"name":"first","value":{"ref":1}},{"name":"threw","value":{"ref":14}},{"name":"domain","value":{"ref":3}},{"name":"oldDomain","value":{"ref":3}},{"name":"list","value":{"ref":7}}],"position":3787,"line":118,"column":14,"sourceLineText":"        first._onTimeout();","scopes":[{"type":1,"index":0},{"type":3,"index":1},{"type":0,"index":2}],"text":"#01 #<Timer>[0](aka listOnTimeout)() timers.js line 119 column 15 (position 3788)"}]},"refs":[{"handle":1,"type":"object","className":"Object","constructorFunction":{"ref":2},"protoObject":{"ref":4},"prototypeObject":{"ref":3},"properties":[{"name":"_idleTimeout","propertyType":1,"ref":11},{"name":"_idlePrev","propertyType":1,"ref":17},{"name":"_idleNext","propertyType":1,"ref":17},{"name":"_idleStart","propertyType":1,"ref":18},{"name":"_onTimeout","propertyType":1,"ref":0},{"name":"_repeat","propertyType":1,"ref":19}],"text":"#<Object>"},{"handle":0,"type":"function","className":"Function","constructorFunction":{"ref":20},"protoObject":{"ref":21},"prototypeObject":{"ref":22},"name":"a","inferredName":"","resolved":true,"source":"function a() {\n    console.log('Hello world');\n    setTimeout(a, 2000);\n}","script":{"ref":6},"scriptId":42,"position":72,"line":0,"column":72,"scopes":[{"type":3,"index":0},{"type":0,"index":1}],"properties":[{"name":"length","attributes":7,"propertyType":3,"ref":23},{"name":"name","attributes":7,"propertyType":3,"ref":24},{"name":"arguments","attributes":7,"propertyType":3,"ref":25},{"name":"caller","attributes":7,"propertyType":3,"ref":8},{"name":"prototype","attributes":6,"propertyType":3,"ref":22}],"text":"function a() {\n    console.log('Hello world');\n    setTimeout(a, 2000);\n}"},{"handle":6,"type":"script","name":"/Users/ivolodin/Documents/Code/debugger/validate.js","id":42,"lineOffset":0,"columnOffset":0,"lineCount":8,"sourceStart":"(function (exports, require, module, __filename, __dirname) { function a() {\n   ","sourceLength":146,"scriptType":2,"compilationType":0,"context":{"ref":5},"text":"/Users/ivolodin/Documents/Code/debugger/validate.js (lines: 8)"},{"handle":7,"type":"object","className":"Timer","constructorFunction":{"ref":15},"protoObject":{"ref":16},"prototypeObject":{"ref":3},"properties":[{"name":"_idleNext","propertyType":1,"ref":7},{"name":"_idlePrev","propertyType":1,"ref":7},{"name":"msecs","propertyType":1,"ref":11},{"name":0,"ref":8}],"text":"#<Timer>"},{"handle":8,"type":"function","className":"Function","constructorFunction":{"ref":20},"protoObject":{"ref":21},"prototypeObject":{"ref":26},"name":"listOnTimeout","inferredName":"","resolved":true,"source":"function listOnTimeout() {\n  var msecs = this.msecs;\n  var list = this;\n\n  debug('timeout callback %d', msecs);\n\n  var now = Timer.now();\n  debug('now: %d', now);\n\n  var diff, first, threw;\n  while (first = L.peek(list)) {\n    // If the previous iteration caused a timer to be added,\n    // update the value of \"now\" so that timing computations are\n    // done correctly. See test/simple/test-timers-blocking-callback.js\n    // for more information.\n    if (now < first._idleStart) {\n      now = Timer.now();\n      debug('now: %d', now);\n    }\n\n    diff = now - first._idleStart;\n    if (diff < msecs) {\n      list.start(msecs - diff, 0);\n      debug('%d list wait because diff is %d', msecs, diff);\n      return;\n    } else {\n      L.remove(first);\n      assert(first !== L.peek(list));\n\n      if (!first._onTimeout) continue;\n\n      // v0.4 compatibility: if the timer callback throws and the\n      // domain or uncaughtException handler ignore the exception,\n      // other timers that expire on this tick should still run.\n      //\n      // https://github.com/joyent/node/issues/2631\n      var domain = first.domain;\n      if (domain && domain._disposed)\n        continue;\n\n      try {\n        if (domain)\n          domain.enter();\n        threw = true;\n        first._onTimeout();\n        if (domain)\n          domain.exit();\n        threw = false;\n      } finally {\n        if (threw) {\n          // We need to continue processing after domain error handling\n          // is complete, but not by using whatever domain was left over\n          // when the timeout threw its exception.\n          var oldDomain = process.domain;\n          process.domain = null;\n          process.nextTick(function() {\n            list[kOnTimeout]();\n          });\n          process.domain = oldDomain;\n        }\n      }\n    }\n  }\n\n  debug('%d list empty', msecs);\n  assert(L.isEmpty(list));\n  list.close();\n  delete lists[msecs];\n}","script":{"ref":10},"scriptId":46,"position":2537,"line":74,"column":22,"scopes":[{"type":3,"index":0},{"type":0,"index":1}],"properties":[{"name":"length","attributes":7,"propertyType":3,"ref":23},{"name":"name","attributes":7,"propertyType":3,"ref":27},{"name":"arguments","attributes":7,"propertyType":3,"ref":28},{"name":"caller","attributes":7,"propertyType":3,"ref":17},{"name":"prototype","attributes":6,"propertyType":3,"ref":26}],"text":"function listOnTimeout() {\n  var msecs = this.msecs;\n  var list = this;\n\n  debug('timeout callback %d', msecs);\n\n  var now = Timer.now();\n  debug('now: %d', now);\n\n  var diff, first, threw;\n  while (first = L.peek(list)) {\n    // If the previous iteration caused a timer to be added,\n    // update the value of \"now\" so that timing computations are\n    // done correctly. See test/simple/test-timers-blocking-callback.js\n    // for more information.\n    if (now < first._idleStart) {\n      now = Timer.now();\n      debug('now: %d', now);\n    }\n\n    diff = now - first._idleStart;\n    if (diff < msecs) {\n      list.start(msecs - diff, 0);\n      debug('%d list wait because diff is %d', msecs, diff);\n      return;\n    } else {\n      L.remove(first);\n      assert(first !== L.peek(list));\n\n      if (!first._onTimeout) continue;\n\n      // v0.4 compatibility: if the timer callback throws and the\n      // domain or uncaughtException handler ignore the exception,\n      // other timers that expire on this tick should still run.\n      //\n      // https://github.com/joyent/node/issues/2631\n      var domain = first.domain;\n      if (domain && domain._disposed)\n        continue;\n\n      try {\n        if (domain)\n          domain.enter();\n        threw = true;\n        first._onTimeout();\n        if (domain)\n          domain.exit();\n        threw = false;\n      } finally {\n        if (threw) {\n          // We need to continue processing after domain error handling\n          // is complete, but not by using whatever domain was left over\n          // when the timeout threw its exception.\n          var oldDomain = process.domain;\n          process.domain = null;\n          process.nextTick(function() {\n            list[kOnTimeout]();\n          });\n          process.domain = oldDomain;\n        }\n      }\n    }\n  }\n\n  debug('%d list empty', msecs);\n  assert(L.isEmpty(list));\n  list.close();\n  delete lists[msecs];\n}"},{"handle":10,"type":"script","name":"timers.js","id":46,"lineOffset":0,"columnOffset":0,"lineCount":591,"sourceStart":"(function (exports, require, module, __filename, __dirname) { // Copyright Joyen","sourceLength":15200,"scriptType":2,"compilationType":0,"context":{"ref":9},"text":"timers.js (lines: 591)"},{"handle":11,"type":"number","value":2000,"text":"2000"},{"handle":12,"type":"number","value":139922165,"text":"139922165"},{"handle":13,"type":"number","value":2005,"text":"2005"},{"handle":14,"type":"boolean","value":true,"text":"true"},{"handle":3,"type":"undefined","text":"undefined"}],"running":false}
______________________________________
Server request________________________
Content-Length: 92

{"command":"scopes","arguments":{"frame_index":0,"frameNumber":0},"type":"request","seq":15}
______________________________________
Server request________________________
Content-Length: 141

{"command":"evaluate","arguments":{"expression":"res.body","disable_break":true,"maxStringLength":10000,"frame":0},"type":"request","seq":16}
______________________________________
Server response_______________________
Content-Length: 3868

{"seq":15,"request_seq":15,"type":"response","command":"scopes","success":true,"body":{"fromScope":0,"toScope":3,"totalScopes":3,"scopes":[{"type":1,"index":0,"frameIndex":0,"object":{"ref":-1},"text":"#<ScopeMirror>"},{"type":3,"index":1,"frameIndex":0,"object":{"ref":-2},"text":"#<ScopeMirror>"},{"type":0,"index":2,"frameIndex":0,"object":{"ref":29},"text":"#<ScopeMirror>"}]},"refs":[{"handle":-1,"type":"object","className":"Object","constructorFunction":{"ref":30},"protoObject":{"ref":31},"prototypeObject":{"ref":3},"properties":[],"text":"#<Object>"},{"handle":-2,"type":"object","className":"Object","constructorFunction":{"ref":30},"protoObject":{"ref":31},"prototypeObject":{"ref":3},"properties":[{"name":"a","propertyType":2,"ref":0}],"text":"#<Object>"},{"handle":29,"type":"object","className":"Object","constructorFunction":{"ref":32},"protoObject":{"ref":33},"prototypeObject":{"ref":3},"properties":[{"name":"WeakSet","attributes":2,"ref":34},{"name":"DTRACE_HTTP_SERVER_RESPONSE","ref":35},{"name":"URIError","attributes":2,"ref":36},{"name":"DTRACE_NET_SOCKET_READ","ref":37},{"name":"decodeURIComponent","attributes":2,"ref":38},{"name":"Intl","attributes":7,"ref":39},{"name":"Boolean","attributes":2,"ref":40},{"name":"clearInterval","ref":41},{"name":"Int32Array","attributes":2,"ref":42},{"name":"parseInt","attributes":2,"ref":43},{"name":"DTRACE_NET_STREAM_END","ref":44},{"name":"DTRACE_HTTP_SERVER_REQUEST","ref":45},{"name":"Array","attributes":2,"ref":46},{"name":"Map","attributes":2,"ref":47},{"name":"Int8Array","attributes":2,"ref":48},{"name":"Uint32Array","attributes":2,"ref":49},{"name":"GLOBAL","ref":50},{"name":"clearImmediate","ref":51},{"name":"Buffer","ref":52},{"name":"Function","attributes":2,"ref":20},{"name":"setImmediate","ref":53},{"name":"JSON","attributes":2,"ref":54},{"name":"isNaN","attributes":2,"ref":55},{"name":"Infinity","attributes":7,"ref":56},{"name":"Symbol","attributes":2,"ref":57},{"name":"process","ref":58},{"name":"undefined","attributes":7,"ref":3},{"name":"encodeURI","attributes":2,"ref":59},{"name":"String","attributes":2,"ref":60},{"name":"Number","attributes":2,"ref":61},{"name":"unescape","attributes":2,"ref":62},{"name":"Set","attributes":2,"ref":63},{"name":"DTRACE_NET_SOCKET_WRITE","ref":64},{"name":"decodeURI","attributes":2,"ref":65},{"name":"Int16Array","attributes":2,"ref":66},{"name":"DataView","attributes":2,"ref":67},{"name":"Float64Array","attributes":2,"ref":68},{"name":"WeakMap","attributes":2,"ref":69},{"name":"escape","attributes":2,"ref":70},{"name":"setTimeout","ref":71},{"name":"encodeURIComponent","attributes":2,"ref":72},{"name":"Uint8Array","attributes":2,"ref":73},{"name":"isFinite","attributes":2,"ref":74},{"name":"DTRACE_NET_SERVER_CONNECTION","ref":75},{"name":"Math","attributes":2,"ref":76},{"name":"Error","attributes":2,"ref":77},{"name":"DTRACE_HTTP_CLIENT_RESPONSE","ref":78},{"name":"DTRACE_HTTP_CLIENT_REQUEST","ref":79},{"name":"ReferenceError","attributes":2,"ref":80},{"name":"root","ref":50},{"name":"clearTimeout","ref":81},{"name":"setInterval","ref":82},{"name":"NaN","attributes":7,"ref":83},{"name":"console","propertyType":3,"ref":3},{"name":"SyntaxError","attributes":2,"ref":84},{"name":"RangeError","attributes":2,"ref":85},{"name":"eval","attributes":2,"ref":86},{"name":"EvalError","attributes":2,"ref":87},{"name":"Promise","attributes":2,"ref":88},{"name":"Date","attributes":2,"ref":89},{"name":"global","ref":50},{"name":"Uint8ClampedArray","attributes":2,"ref":90},{"name":"parseFloat","attributes":2,"ref":91},{"name":"Float32Array","attributes":2,"ref":92},{"name":"RegExp","attributes":2,"ref":93},{"name":"ArrayBuffer","attributes":2,"ref":94},{"name":"Object","attributes":2,"ref":32},{"name":"TypeError","attributes":2,"ref":95},{"name":"Uint16Array","attributes":2,"ref":96}],"text":"#<Object>"}],"running":false}
______________________________________
Server response_______________________
Content-Length: 145

{"seq":16,"request_seq":16,"type":"response","command":"evaluate","success":false,"message":"ReferenceError: res is not defined","running":false}
______________________________________
Server request________________________
Content-Length: 74

{"command":"lookup","arguments":{"handles":[2]},"type":"request","seq":17}
______________________________________
Server response_______________________
Content-Length: 3557

{"seq":17,"request_seq":17,"type":"response","command":"lookup","success":true,"body":{"2":{"handle":2,"type":"function","className":"Function","constructorFunction":{"ref":20},"protoObject":{"ref":21},"prototypeObject":{"ref":4},"name":"","inferredName":"Timeout","resolved":true,"source":"function (after) {\n  this._idleTimeout = after;\n  this._idlePrev = this;\n  this._idleNext = this;\n  this._idleStart = null;\n  this._onTimeout = null;\n  this._repeat = false;\n}","script":{"ref":10},"scriptId":46,"position":7946,"line":295,"column":22,"scopes":[{"type":3,"index":0},{"type":0,"index":1}],"properties":[{"name":"length","attributes":7,"propertyType":3,"ref":97},{"name":"name","attributes":7,"propertyType":3,"ref":98},{"name":"arguments","attributes":7,"propertyType":3,"ref":17},{"name":"caller","attributes":7,"propertyType":3,"ref":17},{"name":"prototype","attributes":6,"propertyType":3,"ref":4}],"text":"function (after) {\n  this._idleTimeout = after;\n  this._idlePrev = this;\n  this._idleNext = this;\n  this._idleStart = null;\n  this._onTimeout = null;\n  this._repeat = false;\n}"}},"refs":[{"handle":20,"type":"function","className":"Function","constructorFunction":{"ref":20},"protoObject":{"ref":21},"prototypeObject":{"ref":21},"name":"Function","inferredName":"","resolved":true,"source":"function Function() { [native code] }","script":{"ref":100},"scriptId":4,"position":30226,"line":1329,"column":28,"scopes":[],"properties":[{"name":"length","attributes":7,"propertyType":3,"ref":97},{"name":"name","attributes":7,"propertyType":3,"ref":101},{"name":"arguments","attributes":7,"propertyType":3,"ref":17},{"name":"caller","attributes":7,"propertyType":3,"ref":17},{"name":"prototype","attributes":7,"propertyType":3,"ref":21}],"text":"function Function() { [native code] }"},{"handle":21,"type":"function","className":"Function","constructorFunction":{"ref":20},"protoObject":{"ref":102},"prototypeObject":{"ref":3},"name":"Empty","inferredName":"","resolved":true,"source":"function Empty() {}","script":{"ref":104},"scriptId":1,"position":0,"line":0,"column":0,"scopes":[{"type":0,"index":0}],"properties":[{"name":"length","attributes":7,"propertyType":3,"ref":23},{"name":"name","attributes":7,"propertyType":3,"ref":105},{"name":"arguments","attributes":7,"propertyType":3,"ref":17},{"name":"caller","attributes":7,"propertyType":3,"ref":17},{"name":"constructor","attributes":2,"propertyType":2,"ref":20},{"name":"bind","attributes":2,"propertyType":2,"ref":106},{"name":"toString","attributes":2,"propertyType":2,"ref":107},{"name":"call","attributes":2,"propertyType":2,"ref":108},{"name":"apply","attributes":2,"propertyType":2,"ref":109}],"text":"function Empty() {}"},{"handle":4,"type":"object","className":"Object","constructorFunction":{"ref":2},"protoObject":{"ref":102},"prototypeObject":{"ref":3},"properties":[{"name":"constructor","attributes":2,"propertyType":2,"ref":2},{"name":"unref","propertyType":2,"ref":110},{"name":"ref","propertyType":2,"ref":111},{"name":"close","propertyType":2,"ref":112}],"text":"#<Object>"},{"handle":10,"type":"script","name":"timers.js","id":46,"lineOffset":0,"columnOffset":0,"lineCount":591,"sourceStart":"(function (exports, require, module, __filename, __dirname) { // Copyright Joyen","sourceLength":15200,"scriptType":2,"compilationType":0,"context":{"ref":9},"text":"timers.js (lines: 591)"},{"handle":97,"type":"number","value":1,"text":"1"},{"handle":98,"type":"string","value":"","length":0,"text":""},{"handle":17,"type":"null","text":"null"}],"running":false}
______________________________________
